---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Comments from '../../components/Comments.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();

// Get related posts (same tags, excluding current post)
const allPosts = (await getCollection('blog'))
  .filter(p => p.slug !== post.slug && !p.data.draft);

const relatedPosts = allPosts
  .filter(p => p.data.tags.some(tag => post.data.tags.includes(tag)))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

const readingTime = Math.ceil(post.body.split(' ').length / 200);
---

<Layout 
  title={post.data.title}
  description={post.data.description}
  type="article"
  publishedTime={post.data.pubDate.toISOString()}
  modifiedTime={post.data.updatedDate?.toISOString()}
  author={post.data.author}
  tags={post.data.tags}
  image={post.data.image}
>
  <Header />
  
  <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Breadcrumb -->
    <nav class="mb-8" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400">
        <li><a href="/" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">Home</a></li>
        <li><span class="mx-2">/</span></li>
        <li><a href="/blog" class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">Blog</a></li>
        <li><span class="mx-2">/</span></li>
        <li class="text-gray-900 dark:text-white">{post.data.title}</li>
      </ol>
    </nav>

    <article class="prose prose-lg dark:prose-invert max-w-none">
      <!-- Article Header -->
      <header class="mb-8 not-prose">
        <div class="flex flex-wrap gap-2 mb-4">
          {post.data.tags.map(tag => (
            <span class="px-3 py-1 text-sm bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full">
              {tag}
            </span>
          ))}
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
          {post.data.title}
        </h1>
        
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-gray-600 dark:text-gray-400 mb-8">
          <div class="flex items-center mb-4 sm:mb-0">
            <div class="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium mr-4">
              {post.data.author.charAt(0).toUpperCase()}
            </div>
            <div>
              <p class="font-medium text-gray-900 dark:text-white">{post.data.author}</p>
              <div class="flex items-center text-sm">
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                <span class="mx-2">•</span>
                <span>{readingTime} min read</span>
              </div>
            </div>
          </div>
          
          <!-- Social Share Buttons -->
          <div class="flex items-center space-x-4">
            <span class="text-sm font-medium">Share:</span>
            <a 
              href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post.data.title)}&url=${encodeURIComponent(Astro.url.toString())}`}
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              aria-label="Share on Twitter"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
            </a>
            <a 
              href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
              target="_blank"
              rel="noopener noreferrer"
              class="text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              aria-label="Share on LinkedIn"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </a>
          </div>
        </div>
        
        {post.data.updatedDate && (
          <p class="text-sm text-gray-600 dark:text-gray-400 mb-8">
            Last updated: {post.data.updatedDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </p>
        )}
      </header>

      <!-- Article Content -->
      <div class="prose-content">
        <Content />
      </div>
    </article>

    <!-- Comments -->
    <Comments />

    <!-- Related Posts -->
    {relatedPosts.length > 0 && (
      <section class="mt-16 pt-8 border-t border-gray-200 dark:border-gray-700">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Related Posts</h2>
        <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {relatedPosts.map((relatedPost) => (
            <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow border border-gray-200 dark:border-gray-700">
              <div class="p-6">
                <div class="text-sm text-gray-500 dark:text-gray-400 mb-2">
                  <time datetime={relatedPost.data.pubDate.toISOString()}>
                    {relatedPost.data.pubDate.toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>
                </div>
                
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
                  <a href={`/blog/${relatedPost.slug}/`} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                    {relatedPost.data.title}
                  </a>
                </h3>
                
                <p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3">
                  {relatedPost.data.description}
                </p>
                
                <div class="flex flex-wrap gap-1">
                  {relatedPost.data.tags.slice(0, 2).map(tag => (
                    <span class="px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    )}

    <!-- Navigation -->
    <nav class="mt-16 pt-8 border-t border-gray-200 dark:border-gray-700">
      <div class="flex justify-between items-center">
        <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors">
          ← Back to Blog
        </a>
        
        <button 
          onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
          class="text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 font-medium transition-colors"
        >
          Back to Top ↑
        </button>
      </div>
    </nav>
  </main>
  
  <Footer />
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .prose-content {
    line-height: 1.7;
  }
  
  .prose-content h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose-content h3 {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .prose-content p {
    margin-bottom: 1.25rem;
  }
  
  .prose-content pre {
    margin: 1.5rem 0;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .prose-content code {
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
</style>
